##############################################################################
############################### makefile-inc #################################
##############################################################################
#                                                                            #
#   makefile of libMCFCl as a pre-built library                              #
#                                                                            #
#   Input:  $(libMCFClDIR) = the directory where the libMCFCl source is      #
#                                                                            #
#           optional: $(CC) = the C++ compiler command                       #
#                                                                            #
#           optional: $(SW) = the compiler options (optimization, debug,     #
#                     required C++ standard, ...)                            #
#                                                                            #
#   Output: there is no $(libMCFClH) output, since the calling makefile has  #
#           no need to check for changes in the .h and rebuild the .a: this  #
#           is all done here inside. However, the following macros are       #
#           provided because the code using libMCFCl need to know where to   #
#           find the .h files to include, which external libreries and       #
#            -L<libdirs> need be used in the linking phase, and of course    #
#           libMCFCl.a need be linked against.                               #
#           $(libMCFClINC) = the -I$(include directories) for libMCFCl       #
#           $(libMCFClLIB) = external libreries + -L<libdirs> for libMCFCl   #
#           $(libMCFClOBJ) = the libMCFCl.a library itself                   #
#                                                                            #
#   Internally, the makefile calls makefile-c, strips away the *H macro and  #  
#   redefines the *OBJ one. It then uses the standard front-end makefile-lib #
#   to have the library built, "forwarding" it $(CC) and $(SW) if they have  #
#   been provided by the including makefile.                                 #
#                                                                            #
#                                VERSION 2.00                                #
#                               28 - 07 - 2020                               #
#                                                                            #
#                              Antonio Frangioni                             #
#                          Operations Research Group                         #
#                         Dipartimento di Informatica                        #
#                             Universita' di Pisa                            #
#									     #
##############################################################################

# include the libMCFCl makefile internally defining all external modules - - - -

include $(libMCFClDIR)lib/makefile-c

# re-define the OBJ as the library- - - - - - - - - - - - - - - - - - - - - -

libMCFClOBJ = $(libMCFClDIR)lib/libMCFCl.a

# ensure that the library is properly constructed - - - - - - - - - - - - - -
# force the make to be always executed

$(libMCFClOBJ): FORCE
ifndef CC
ifndef SW
	make -f $(libMCFClDIR)lib/makefile-lib libMCFClDIR=$(libMCFClDIR)
else
	make -f $(libMCFClDIR)lib/makefile-lib libMCFClDIR=$(libMCFClDIR) \
	SW='$(SW)'
endif
else
ifndef SW
	make -f $(libMCFClDIR)lib/makefile-lib libMCFClDIR=$(libMCFClDIR) \
	CC=$(CC)
else
	make -f $(libMCFClDIR)lib/makefile-lib libMCFClDIR=$(libMCFClDIR) \
	CC=$(CC) SW='$(SW)'
endif
endif
FORCE:

# clean-up unrequired things- - - - - - - - - - - - - - - - - - - - - - - - -

libMCFClH =

# clean - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

clean::
	make -f $(libMCFClDIR)lib/makefile-lib clean libMCFClDIR=$(libMCFClDIR) 

########################## End of makefile-inc ###############################
